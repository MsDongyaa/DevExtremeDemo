#pragma checksum "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5da78a5d1edcecceb3bb24b84afc59ee569004f2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(DevExtremeDemo.Models.DataGrid.Views_DataGrid_CRUDOperations), @"mvc.1.0.view", @"/Views/DataGrid/CRUDOperations.cshtml")]
namespace DevExtremeDemo.Models.DataGrid
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project\DevExtremeDemo\Views\_ViewImports.cshtml"
using DevExtremeDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "D:\Project\DevExtremeDemo\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5da78a5d1edcecceb3bb24b84afc59ee569004f2", @"/Views/DataGrid/CRUDOperations.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"091d1ded98766bb1a9a96a34fc69dfc524ab2320", @"/Views/_ViewImports.cshtml")]
    public class Views_DataGrid_CRUDOperations : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
Write(Html.DevExtreme().DataGrid<DevExtremeDemo.Models.Customer>()
    .ID("gridContainer")
    .ShowBorders(true)
    .RepaintChangesOnly(true)
    .Scrolling(s => s.RowRenderingMode(GridRowRenderingMode.Virtual))
    //.Editing(e => e
    //    .Mode(GridEditMode.Cell)
    //    .RefreshMode(GridEditRefreshMode.Reshape)
    //    .AllowAdding(true)
    //    .AllowDeleting(true)
    //    .AllowUpdating(true)
    //)//单元格新增编辑
    .Editing(e => e.Mode(GridEditMode.Popup)//弹出式新增编辑
        .AllowUpdating(true)
        .AllowAdding(true)
        .AllowDeleting(true)
        .Popup(p => p
            .Title("客户信息")
            .ShowTitle(true)
            .Width(700)
            .Height(525)
        )
        .Form(f => f.Items(items =>
        {
            items.AddGroup()
                .ColCount(2)
                .ColSpan(2)
                .Items(groupItems =>
                {
                    groupItems.AddSimpleFor(m => m.first_name);
                    groupItems.AddSimpleFor(m => m.last_name);
                    groupItems.AddSimpleFor(m => m.email);
                    groupItems.AddSimpleFor(m => m.active);
                    groupItems.AddSimpleFor(m => m.create_date);
                    groupItems.AddSimpleFor(m => m.last_update);

                });

            items.AddGroup()
                .Caption("Home Address")
                .ColCount(2)
                .ColSpan(2)
                .Items(groupItems =>
                {
                    groupItems.AddSimpleFor(m => m.store_id);
                    groupItems.AddSimpleFor(m => m.address_id);
                });
        }))
    )
    .Columns(columns => {
        columns.AddFor(m => m.customer_id);

        columns.AddFor(m => m.first_name);

        columns.AddFor(m => m.last_name);

        columns.AddFor(m => m.email);
        columns.AddFor(m => m.active)
            .Lookup(lookup => lookup
                .DataSource(d => d.WebApi()
                    .Controller("DataGridWebApi")
                    .LoadAction("ActiveLookup")
                    .LoadMode(DataSourceLoadMode.Raw)
                    .Key("Value")
                    .OnBeforeSend("beforeSend")
                )
                .ValueExpr("Value")
                .DisplayExpr("Text")
            );

        columns.AddFor(m => m.address_id)
            .Lookup(lookup => lookup
                .DataSource(d => d.WebApi()
                    .Controller("DataGridWebApi")
                    .LoadAction("AddressLookup")
                    .LoadMode(DataSourceLoadMode.Raw)
                    .Key("Value")
                    .OnBeforeSend("beforeSend")
                )
                .ValueExpr("Value")
                .DisplayExpr("Text")
            );

        columns.AddFor(m => m.store_id)
            .Lookup(lookup => lookup
                .DataSource(d => d.WebApi()
                    .Controller("DataGridWebApi")
                    .LoadAction("StoreLookup")
                    .LoadMode(DataSourceLoadMode.Raw)
                    .Key("Value")
                    .OnBeforeSend("beforeSend")
                )
                .ValueExpr("Value")
                .DisplayExpr("Text")
            );

        columns.AddFor(m => m.create_date);
        columns.AddFor(m => m.last_update);

    })
    .Paging(paging => paging.PageSize(10))
    .Pager(pager =>
    {
        pager.Visible(true);
        pager.DisplayMode(GridPagerDisplayMode.Full);
        pager.ShowPageSizeSelector(true);
        pager.AllowedPageSizes(new JS("[5, 10,20,50, 'all']"));
        pager.ShowInfo(true);
        pager.ShowNavigationButtons(true);
    })
    .FilterRow(f => f.Visible(true))
    
    .DataSource(d => d.WebApi()
        .Controller("DataGridWebApi")
        .LoadAction("Customers")
        .InsertAction("InsertCustomer")
        .UpdateAction("UpdateCustomer")
        .DeleteAction("DeleteCustomer")
        .Key("customer_id")
        .OnBeforeSend("beforeSend")
    )
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"options\">\r\n    <div class=\"caption\">Options</div>\r\n    <div class=\"option-container\">\r\n        <div class=\"option\">\r\n            ");
#nullable restore
#line 131 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
        Write(Html.DevExtreme().SelectBox()
                    .ID("displayMode")
                    .DataSource(new[] { new { text= "Display Mode 'full'", value= "full" }, new { text= "Display Mode 'compact'", value= "compact" } })
                    .DisplayExpr("text")
                    .ValueExpr("value")
                    .Value("full")
                    .OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral(@"
                        function(data) {
                            var dataGrid = $(""#gridContainer"").dxDataGrid(""instance"");
                            var showInfo = $(""#showInfo"").dxCheckBox(""instance"");
                            var navButtons = $(""#showNavButtons"").dxCheckBox(""instance"");
                            dataGrid.option(""pager.displayMode"", data.value);
                            showInfo.option(""disabled"", data.value === ""compact"");
                            navButtons.option(""disabled"", data.value === ""compact"");
                        }
                    ");
    PopWriter();
}
))
                );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div>\r\n        <div class=\"option\">\r\n            ");
#nullable restore
#line 150 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
        Write(Html.DevExtreme().CheckBox()
            .ID("showPageSizes")
            .Text("Show Page Size Selector")
            .Value(true)
            .OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\r\n                    function(data) {\r\n                        var dataGrid = $(\"#gridContainer\").dxDataGrid(\"instance\");\r\n                        dataGrid.option(\"pager.showPageSizeSelector\", data.value);\r\n                    }\r\n                ");
    PopWriter();
}
))
            );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div>\r\n        <div class=\"option\">\r\n            ");
#nullable restore
#line 163 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
        Write(Html.DevExtreme().CheckBox()
            .ID("showInfo")
            .Text("Show Info Text")
            .Value(true)
            .OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\r\n                    function(data) {\r\n                        var dataGrid = $(\"#gridContainer\").dxDataGrid(\"instance\");\r\n                        dataGrid.option(\"pager.showInfo\", data.value);\r\n                    }\r\n                ");
    PopWriter();
}
))
            );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div>\r\n        <div class=\"option\">\r\n            ");
#nullable restore
#line 176 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
        Write(Html.DevExtreme().CheckBox()
            .ID("showNavButtons")
            .Text("Show Navigation Buttons")
            .Value(true)
            .OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\r\n                    function(data) {\r\n                        var dataGrid = $(\"#gridContainer\").dxDataGrid(\"instance\");\r\n                        dataGrid.option(\"pager.showNavigationButtons\", data.value);\r\n                    }\r\n                ");
    PopWriter();
}
))
            );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div>\r\n        <div class=\"option\">\r\n            <span>Refresh Mode:</span>\r\n            ");
#nullable restore
#line 190 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
        Write(Html.DevExtreme().SelectBox()
            .ID("refresh-mode")
            .DataSource(new[] { "full", "reshape", "repaint" })
            .Value("reshape")
            .OnValueChanged(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral(" function(e) {\r\n                $(\"#grid\").dxDataGrid(\"instance\").option(\"editing.refreshMode\", e.value);\r\n            } ");
    PopWriter();
}
))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n    <div id=\"requests\">\r\n        <div>\r\n            <div class=\"caption\">Network Requests</div>\r\n            ");
#nullable restore
#line 203 "D:\Project\DevExtremeDemo\Views\DataGrid\CRUDOperations.cshtml"
        Write(Html.DevExtreme().Button()
                .ID("clear")
                .Text("Clear")
                .OnClick(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral(" function() {\r\n                    $(\"#requests ul\").empty();\r\n                } ");
    PopWriter();
}
))
            );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        </div>
        <ul></ul>
    </div>

</div>
<script>
    function beforeSend(operation, ajaxSettings) {
        var data = ajaxSettings.data || {},
            args = Object.keys(data).map(function (key) {
                return key + ""="" + data[key];
            }).join("" "");

        var logList = $(""#requests ul""),
            time = DevExpress.localization.formatDate(new Date(), ""HH:mm:ss""),
            newItem = $(""<li>"").text([time, ajaxSettings.method, ajaxSettings.url, args].join("" ""));

        logList.prepend(newItem);
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
